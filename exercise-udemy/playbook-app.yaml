- name: Configure app 
  hosts: ansible_target2
  become: true
  vars:
    mysql_root_password: Caca.123
    tools:
      - mysql-server
      - httpd 
      - php 
      - php-mysql
      - git
      - MySQL-python
      - python3-pip.noarch
  
  tasks:

  - name: MYSQL settings (yum repo)
    shell: |
      curl -sSLO https://dev.mysql.com/get/mysql80-community-release-el7-5.noarch.rpm
      rpm -ivh mysql80-community-release-el7-5.noarch.rpm || /bin/true

  - name: Install services 
    yum:
      name: "{{ tools }}"
      state: present

  #- name: mysql root passwod 
   # shell: grep 'temporary password' /var/log/mysqld.log | awk -F 'localhost:\ ' '{print $2}'
    #register: mysql_root_password

  - name: Configure httpd
    command: sed -i 's/index.html/index.php/g' /etc/httpd/conf/httpd.conf


  - name: Download GIT, update index.php
    shell: |
      git clone https://github.com/kodekloudhub/learning-app-ecommerce.git /var/www/html/
      sed -i 's/172.20.1.101/localhost/g' /var/www/html/index.php
 

  - name: Start services service 
    service:
      name: "{{ item }}"
      state: started
      enabled: True
    with_items:
      - httpd
      - mysqld 



  #- name: update mysql root password for all root accounts
   # mysql_user:
    #  name: root
     # host: "{{ item }}"
      #password: "{{ mysql_root_password }}"
      #login_user: root
      #login_password: "{{ mysql_root_password }}"
      #login_unix_socket: /var/lib/mysql/mysql.sock
      #check_implicit_admin: yes
      #priv: "*.*:ALL,GRANT"
    #with_items:
    #  - "{{ ansible_hostname }}"
    #  - 127.0.0.1
    #  - ::1
    #  - localhost
    #  - name: Copy the root credentials as .my.cnf file
    #:wq!template: src=root.cnf.j2 dest=~/.my.cnf mode=0600    
  
  - name: Create a directory if it does not exist
    file:
      path: /opt/academia/
      state: directory
      mode: '0755'

  - name: Copy db config 
    copy:
      src: /home/ansible/GIT/udemy_ansible/exercise-udemy/db-load-script.sql
      dest: /opt/academia/

  - name: Create ecom database
    shell: mysql -uroot -p"{{ mysql_root_password }}"  < /opt/academia/db-load-script.sql
  
  

